openapi: "3.0.3"
info:
  title: "LPS follow-up plan API"
  description: "Maskinporten API for submitting follow-up plans to NAV and/or the employees general practitioner."
  version: "1.0.0"
servers:
  - url: https://lps-oppfolgingsplan-mottak.ekstern.dev.nav.no
    description: Test Server
  - url: https://lps-oppfolgingsplan-mottak.nav.no
    description: Production Server
paths:
  /api/v1/followupplan:
    post:
      summary: Submit follow-up plan
      description: "Submit follow-up plan to NAV and/or general practitioner"
      tags:
        - Followup-plan API
      security:
        - bearerAuth: [ ]
      requestBody:
        content:
          'application/json':
            schema:
              $ref: "#/components/schemas/FollowUpPlanDTO"
        required: true
      responses:
        "200":
          description: "OK"
          content:
            'application/json':
              schema:
                $ref: "#/components/schemas/FollowUpPlanResponse"
        '400':
          description: The follow-up plan DTO has validation errors. Please check message for the specific error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
        '401':
          description: The maskinporten-token is invalid. Please check message for the specific error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticationError'
        '403':
          description: No active, sent sykmelding, or no active employment relationship found.
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/NoActiveSentSykmeldingError'
                  - $ref: '#/components/schemas/NoActiveEmploymentError'
        '404':
          description: The GP or Employee was not found. Please check the error type for details.
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/GeneralPractitionerNotFoundError'
                  - $ref: '#/components/schemas/EmployeeNotFoundError'
        '500':
          description: An unexpected error occurred on the server. Please contact the NAV developer team if the problem persists.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
  /api/v1/followupplan/{uuid}/sendingstatus:
    get:
      summary: Check sending status
      description: "Gets the sending status to NAV and general practitioner by follow up plan id"
      tags:
        - Followup-plan API
      security:
        - bearerAuth: [ ]
      parameters:
        - in: path
          name: uuid
          schema:
            type: string
          required: true
      responses:
        "200":
          description: "OK"
          content:
            'application/json':
              schema:
                $ref: "#/components/schemas/FollowUpPlanResponse"
        '401':
          description: The maskinporten-token is invalid. Please check message for the specific error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticationError'
        '404':
          description: The follow-up plan was not found. Please ensure that the uuid is correct.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FollowupPlanNotFoundError'
        '500':
          description: An unexpected error occurred on the server. Please contact the NAV developer team if the problem persists.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
  /api/v1/followupplan/verify-integration:
    get:
      summary: Verify Integration
      tags:
        - Followup-plan API
      description: Endpoint to verify if the integration is up and running.
      security:
        - bearerAuth: [ ]
      responses:
        '200':
          description: "Integration is up and running"
          content:
            'text/plain':
              schema:
                type: "string"
                example: "Integration is up and running"
        '401':
          description: The maskinporten-token is invalid. Please check message for the specific error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticationError'

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: Token from maskinporten

  schemas:
    FollowUpPlanDTO:
      type: "object"
      properties:
        employeeIdentificationNumber:
          type: "string"
          description: "A Norwegian national identity number or D number."
          example: "12345678901"
        typicalWorkday:
          type: "string"
          description: "Description of a typical day at work."
          example: "Leading the Galactic Empire, attending strategic meetings, lightsaber training"
        tasksThatCanStillBeDone:
          type: "string"
          description: "Ordinary tasks that still can be done."
          example: "Attending meetings, strategic planning"
        tasksThatCanNotBeDone:
          type: "string"
          description: "Ordinary tasks that can no longer be done because of illness."
          example: "Lightsaber training"
        previousFacilitation:
          type: "string"
          description: "Any previous facilitation that has been done related to the employee's current illness."
          example: "Provided ergonomic chair and voice amplifier"
        plannedFacilitation:
          type: "string"
          description: "Description of facilitation that will be done from now on."
          example: "Flexible working hours, remote command options"
        otherFacilitationOptions:
          type: "string"
          description: "Are there any other options for facilitation at the workplace that have not been tried out yet?"
          example: "Job rotation, task automation"
        followUp:
          type: "string"
          description: "How will the employer/leader follow up the planned facilitation?"
          example: "Weekly check-ins to discuss progress and adjustments"
        evaluationDate:
          type: "string"
          format: "date"
          description: "When will the employer/leader and employee evaluate this oppfolgingsplan?"
          example: "2023-12-31"
        sendPlanToNav:
          type: "boolean"
          description: "Do you want to send this plan to NAV?"
          example: true
        needsHelpFromNav:
          type: "boolean"
          description: "Do you need help from NAV? If yes, a task will be created at NAV's internal systems. 
          Only relevant if the plan should be sent to NAV, when sendPlanToNav is true. 
          Must be false when sendPlanToNav is false."
          example: true
        needsHelpFromNavDescription:
          type: "string"
          description: "Description of what kind of help is needed. 
          Obligatory if needsHelpFromNav is true. 
          Must be null if needsHelpFromNav is false."
          example: "Need assistance with job placement"
        sendPlanToGeneralPractitioner:
          type: "boolean"
          description: "Do you want to send this plan to the employee's general practitioner (fastlege)?"
          example: true
        messageToGeneralPractitioner:
          type: "string"
          description: "Message to the general practitioner (fastlege)."
          example: "Please review the follow-up plan for the patient"
        additionalInformation:
          type: "string"
          description: "Additional information, if relevant."
          example: "Darth Vader prefers to work in the evening due to health condition"
        contactPersonFullName:
          type: "string"
          description: "Full name of the person responsible for following up the employee. Typically the nearest leader."
          example: "Emperor Palpatine"
        contactPersonPhoneNumber:
          type: "string"
          description: "Phone number of the person responsible for following up the employee."
          example: "99999999"
        contactPersonEmail:
          type: "string"
          description: "E-mail of the person responsible for following up the employee."
          example: "emperor@empire.com"
        employeeHasContributedToPlan:
          type: "boolean"
          description: "Has the employee been involved in the process of creating this plan?"
          example: false
        employeeHasNotContributedToPlanDescription:
          type: "string"
          description: "Description of why the employee does not have contributed to the plan. 
          Obligatory if employeeHasContributedToPlan is false.
          Must be null if employeeHasContributedToPlan is true"
          example: "Employee was not available due to Sith business"
        lpsName:
          type: "string"
          description: "Name of the consumer system sending in this plan"
          example: "Empire HR System"
        lpsEmail:
          type: "string"
          description: "Email for the consumer system sending in this plan"
          example: "empirehrsystem@empire.com"
      required:
        - "employeeIdentificationNumber"
        - "typicalWorkday"
        - "tasksThatCanStillBeDone"
        - "tasksThatCanNotBeDone"
        - "previousFacilitation"
        - "plannedFacilitation"
        - "followUp"
        - "evaluationDate"
        - "sendPlanToNav"
        - "sendPlanToGeneralPractitioner"
        - "contactPersonFullName"
        - "contactPersonPhoneNumber"
        - "contactPersonEmail"
        - "employeeHasContributedToPlan"

    FollowUpPlanResponse:
      type: "object"
      properties:
        uuid:
          type: "string"
          description: "An id for a follow up plan"
        isSentToGeneralPractitionerStatus:
          type: "boolean"
          description: "Status for sending a plan to general practitioner, true or false"
        isSentToNavStatus:
          type: "boolean"
          description: "Status for sending a plan to NAV, true or false"

    ValidationError:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/HttpStatusCode'
        type:
          type: string
          example: VALIDATION_ERROR
        message:
          type: string
          example: Invalid employee identification number
      example:
        status:
          value: 400
          description: Bad request
        type: VALIDATION_ERROR
        message: Invalid employee identification number
    AuthenticationError:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/HttpStatusCode'
        type:
          type: string
          example: AUTHENTICATION_ERROR
        message:
          type: string
          example: JWT is expired
      example:
        status:
          value: 401
          description: Unauthorized
        type: AUTHENTICATION_ERROR
        message: JWT is expired
    NoActiveSentSykmeldingError:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/HttpStatusCode'
        type:
          type: string
          example: NO_ACTIVE_SENT_SYKMELDING
        message:
          type: string
          example: No active sykmelding sent to employer
      example:
        status:
          value: 403
          description: Forbidden
        type: NO_ACTIVE_SENT_SYKMELDING
        message: No active sykmelding sent to employer
    NoActiveEmploymentError:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/HttpStatusCode'
        type:
          type: string
          example: NO_ACTIVE_ARBEIDSFORHOLD
        message:
          type: string
          example: No active arbeidsforhold found for given orgnumber
      example:
        status:
          value: 403
          description: Forbidden
        type: NO_ACTIVE_ARBEIDSFORHOLD
        message: No active employment relationship found for given orgnumber
    GeneralPractitionerNotFoundError:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/HttpStatusCode'
        type:
          type: string
          example: GENERAL_PRACTITIONER_NOT_FOUND
        message:
          type: string
          example: General practitioner was not found
      example:
        status:
          value: 404
          description: Not found
        type: GENERAL_PRACTITIONER_NOT_FOUND
        message: General practitioner was not found
    EmployeeNotFoundError:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/HttpStatusCode'
        type:
          type: string
          example: EMPLOYEE_NOT_FOUND
        message:
          type: string
          example: Could not find requested person in our systems
      example:
        status:
          value: 404
          description: Not found
        type: EMPLOYEE_NOT_FOUND
        message: Could not find requested person in our systems
    FollowupPlanNotFoundError:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/HttpStatusCode'
        type:
          type: string
          example: FOLLOWUP_PLAN_NOT_FOUND
        message:
          type: string
          example: The follow-up plan with a given uuid was not found
      example:
        status:
          value: 404
          description: Not found
        type: FOLLOWUP_PLAN_NOT_FOUND
        message: The follow-up plan with a given uuid was not found
    InternalServerError:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/HttpStatusCode'
        type:
          type: string
          example: INTERNAL_SERVER_ERROR
        message:
          type: string
          example: Internal server error
      example:
        status:
          value: 500
          description: Internal server error
        type: INTERNAL_SERVER_ERROR
        message: Internal server error
    HttpStatusCode:
      type: object
      properties:
        value:
          type: integer
        description:
          type: string
